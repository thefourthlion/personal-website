const journal = require("../models/journal"); exports.createjournal = async (req, res) => { try { let newjournal = new journal({header: req.body.header,entry: req.body.entry,timestamp: req.body.timestamp, }); await newjournal.save(); res.send(newjournal); } catch (err) { console.log(err); } }; exports.readjournal = async (req, res) => { try { journal.find({}, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); }).sort({ createdAt: -1 }); } catch (err) { console.log(err); } }; exports.readjournalFromID = async (req, res) => { try { await journal.findById({ _id: req.params.id }, {}, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); }); } catch (err) { console.log(err); } }; exports.updatejournal = async (req, res) => { try { await journal.findByIdAndUpdate( req.params.id, {header: req.body.header,entry: req.body.entry,timestamp: req.body.timestamp, }, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); } ); } catch (err) { console.log(err); } }; exports.deletejournal = async (req, res) => { try { if ((await journal.findById(req.params.id)) === null) { res.json({ app: "post not found" }); } else { await journal.findByIdAndRemove(req.params.id).exec(); res.json({ app: "post deleted" }); } } catch (err) { console.log(err); res.send(err); } };