const library = require("../models/library"); exports.createlibrary = async (req, res) => { try { let newlibrary = new library({title: req.body.title,author: req.body.author,dateFinished: req.body.dateFinished,bookCover: req.body.bookCover,timestamp: req.body.timestamp, }); await newlibrary.save(); res.send(newlibrary); } catch (err) { console.log(err); } }; exports.readlibrary = async (req, res) => { try { library.find({}, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); }).sort({ createdAt: -1 }); } catch (err) { console.log(err); } }; exports.readlibraryFromID = async (req, res) => { try { await library.findById({ _id: req.params.id }, {}, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); }); } catch (err) { console.log(err); } }; exports.updatelibrary = async (req, res) => { try { await library.findByIdAndUpdate( req.params.id, {title: req.body.title,author: req.body.author,dateFinished: req.body.dateFinished,bookCover: req.body.bookCover,timestamp: req.body.timestamp, }, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); } ); } catch (err) { console.log(err); } }; exports.deletelibrary = async (req, res) => { try { if ((await library.findById(req.params.id)) === null) { res.json({ app: "post not found" }); } else { await library.findByIdAndRemove(req.params.id).exec(); res.json({ app: "post deleted" }); } } catch (err) { console.log(err); res.send(err); } };